import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the stringConstruction function below.
    static int stringConstruction(String s) {
    //iterate till q 
        //int q = scanner.nextInt();
        //for(int i=0;i< q;i++)
            
        //{
            //iterate through the string and count its elements 
            //if it encounters the same element then it is added with an extra dollar
            //else it means that the alphabet is just copied like before
            Set<Character> set= new HashSet<Character>();
            //String arr= s.toCharArray;
            for(char c : s.toCharArray())
            {
                set.add(c);
            }
            //this is used to get the final number of elements in the set 
            return(set.size());
        }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s = scanner.nextLine();

            int result = stringConstruction(s);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
